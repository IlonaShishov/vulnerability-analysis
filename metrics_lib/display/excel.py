from openpyxl import load_workbook
from openpyxl.drawing.image import Image
import matplotlib.image as mpimg
import pandas as pd
import os
import math

from metrics_lib.utils import get_notes

def save_notes_to_excel(file_path, sheet_name, metrics={}):
    notes = get_notes(metrics)

    if notes:
        wb = load_workbook(file_path)
        if sheet_name in wb.sheetnames:
            ws = wb[sheet_name]
            next_row = ws.max_row + 3
            ws.cell(row=next_row, column=1, value="Please note the prompts for the following metrics:")   
            for i, line in enumerate(notes):
                ws.cell(row=next_row + 1 + i, column=1, value=line)        
            wb.save(file_path)

def save_plot_to_excel(file_path, sheet_name):
    report_name_as_dir = sheet_name.replace(' ','_').lower()
    plot_dir = os.path.join('.', 'plots', report_name_as_dir)

    if os.path.exists(plot_dir):
        plot_file_paths = [os.path.join(plot_dir, f) for f in os.listdir(plot_dir) if f.endswith('.png')]

        if plot_file_paths:
            wb = load_workbook(file_path)
            if sheet_name in wb.sheetnames:
                ws = wb[sheet_name]
                next_row = ws.max_row + 3
                for plot_path in plot_file_paths:
                    img = Image(plot_path)
                    ws.add_image(img, f'A{next_row}')

                    img_details = mpimg.imread(plot_path)
                    height, _, _ = img_details.shape

                    next_row += math.ceil(height / 20) + 3
                wb.save(file_path)

def save_to_excel(df, sheet_name='Sheet1', index=False, metrics={}):
    file_path = os.getenv("EXAMPLES_XLSX_FILE_NAME")
    try:
        if os.path.exists(file_path):
            with pd.ExcelWriter(file_path, mode='a', if_sheet_exists='replace') as writer:
                df.to_excel(writer, sheet_name=sheet_name, index=index)
                print(f"DataFrame successfully saved to a new sheet: {sheet_name}")
        else:
            df.to_excel(file_path, sheet_name=sheet_name, index=index)
            print(f"File created and DataFrame saved to sheet: {sheet_name}")

        save_notes_to_excel(file_path, sheet_name, metrics)
        save_plot_to_excel(file_path, sheet_name)

    except Exception as e:
        print(f"An error occurred: {e}")