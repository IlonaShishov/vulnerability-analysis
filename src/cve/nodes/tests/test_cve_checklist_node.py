import pytest
import asyncio
from ..cve_checklist_node import _parse_list

@pytest.mark.asyncio
async def test_cve_checklist_parse_list():
    # input_with_square_brackets = ["Verify Kube-proxy Usage on Windows: Is the kube-proxy component running on a Windows environment within the container? This vulnerability specifically affects kube-proxy on Windows.", "Inspect LoadBalancer Service Configuration: Review the configuration of LoadBalancer Services within the cluster. Are there any LoadBalancer Services where the LoadBalancer controller does not set the \'status.loadBalancer.ingress.ip\' field? This is a critical condition for the vulnerability to be exploitable.","Assess Traffic Forwarding Behavior: Evaluate how kube-proxy handles traffic forwarding in the absence of the \'status.loadBalancer.ingress.ip\' field. Is there a possibility that traffic could be unintentionally forwarded to local processes listening on the same port as the LoadBalancer Service?","Check for HNS Policy Creation: Verify if a Host Network Service (HNS) policy is created for LoadBalancer Services with empty or invalid external load balancer IPs. The absence of such a policy could lead to a Man-in-the-Middle (MITM) vulnerability."]
    input_with_square_brackets = ['[\n\t"Verify Kube-proxy Usage on Windows: Is the kube-proxy component running on a Windows environment within the container? This vulnerability specifically affects kube-proxy on Windows.",\n\t"Inspect LoadBalancer Service Configuration: Review the configuration of LoadBalancer Services within the cluster. Are there any LoadBalancer Services where the LoadBalancer controller does not set the \'status.loadBalancer.ingress[].ip\' field? This is a critical condition for the vulnerability to be exploitable.",\n\t"Assess Traffic Forwarding Behavior: Evaluate how kube-proxy handles traffic forwarding in the absence of the \'status.loadBalancer.ingress[].ip\' field. Is there a possibility that traffic could be unintentionally forwarded to local processes listening on the same port as the LoadBalancer Service?",\n\t"Check for HNS Policy Creation: Verify if a Host Network Service (HNS) policy is created for LoadBalancer Services with empty or invalid external load balancer IPs. The absence of such a policy could lead to a Man-in-the-Middle (MITM) vulnerability."\n]']
    result = await _parse_list(input_with_square_brackets)
    assert result == [['Verify Kube-proxy Usage on Windows: Is the kube-proxy component running on a Windows environment within the container? This vulnerability specifically affects kube-proxy on Windows.', "Inspect LoadBalancer Service Configuration: Review the configuration of LoadBalancer Services within the cluster. Are there any LoadBalancer Services where the LoadBalancer controller does not set the 'status.loadBalancer.ingress[].ip' field? This is a critical condition for the vulnerability to be exploitable.", "Assess Traffic Forwarding Behavior: Evaluate how kube-proxy handles traffic forwarding in the absence of the 'status.loadBalancer.ingress[].ip' field. Is there a possibility that traffic could be unintentionally forwarded to local processes listening on the same port as the LoadBalancer Service?", 'Check for HNS Policy Creation: Verify if a Host Network Service (HNS) policy is created for LoadBalancer Services with empty or invalid external load balancer IPs. The absence of such a policy could lead to a Man-in-the-Middle (MITM) vulnerability.']]
