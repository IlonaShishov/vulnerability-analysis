import os
from ragas.llms import LangchainLLMWrapper
from ragas.embeddings import LangchainEmbeddingsWrapper
from langchain_nvidia_ai_endpoints import NVIDIAEmbeddings, ChatNVIDIA
    
def wrap_evaluator_embeddings():

    nvidia_embeddings_params = {
        "model": os.getenv("EMBEDDING_MODEL_NAME"),
        "truncate": os.getenv("TRUNCATE"),
        "max_batch_size": os.getenv("MAX_BATCH_SIZE"),
    }

    base_url = os.getenv("EMBEDDING_MODEL_BASE_URL")
    if base_url:
        nvidia_embeddings_params["base_url"] = base_url

    api_key = os.getenv("API_KEY")
    if api_key:
        nvidia_embeddings_params["api_key"] = api_key

    return LangchainEmbeddingsWrapper(NVIDIAEmbeddings(**nvidia_embeddings_params))

def wrap_evaluator_llm():

    chat_nvidia_params = {
        "model": os.getenv("LLM_MODEL_NAME"),
        "temperature": os.getenv("TEMPERATURE"),
        "top_p": os.getenv("TOP_P"),
        "max_tokens": os.getenv("MAX_TOKENS"),
    }

    base_url = os.getenv("LLM_MODEL_BASE_URL")
    if base_url:
        chat_nvidia_params["base_url"] = base_url

    api_key = os.getenv("API_KEY")
    if api_key:
        chat_nvidia_params["api_key"] = api_key

    return LangchainLLMWrapper(ChatNVIDIA(**chat_nvidia_params))
