import pandas as pd

def exploitability_check(test_data):
    df = pd.DataFrame({'ID': list(test_data.keys())})

    for case_id, outputs in test_data.items():
        affected_count = 0
        unknown_count = 0
        not_affected_count = 0
        for idx, output in enumerate(outputs):
            label = output["justification"]["label"]
            match label:
                case "vulnerable":
                    df.loc[df['ID'] == case_id, f'OP{idx + 1}'] = "Affected"
                    affected_count+=1
                case "uncertain":
                    df.loc[df['ID'] == case_id, f'OP{idx + 1}'] = "Unknown"
                    unknown_count+=1
                case _:
                    df.loc[df['ID'] == case_id, f'OP{idx + 1}'] = "Not Affected"
                    not_affected_count+=1
        total_count = affected_count + not_affected_count + unknown_count
        df.loc[df['ID'] == case_id, 'Affected Ratio'] = affected_count / total_count
        df.loc[df['ID'] == case_id, 'Not Affected Ratio'] = not_affected_count / total_count
        df.loc[df['ID'] == case_id, 'Unknown Ratio'] = unknown_count / total_count

    return df

