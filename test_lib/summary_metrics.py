

class SummaryMetrics:
    
    SUMMARY_PROMPT = """Summarize the exploitability investigation results of a Common Vulnerabilities and Exposures (CVE) \
        based on the provided Checklist and Findings. Write a concise paragraph focusing only on checklist items with \
        definitive answers. Begin your response by clearly stating whether the CVE is exploitable. Disregard any ambiguous \
        checklist items.
        Checklist and Findings:
        {{response}}"""

    def __init__(self):

        self.metrics = {
            "SemanticSimilariy": {},
            "LLMContextPrecisionWithoutReference": {},
            "LLMContextRecall": {},
            "Faithfulness": {},
            "ResponseRelevancy": {},
            "SummarizationScore": {},
        }

    def get_datasets(self, data):
        datasets = {}
        for case_id, outputs in data.items():
            dataset = []
            for output in outputs:    
                checklist_lst = [item["response"] for item in output["checklist"]]
                checklist_str = ', '.join(checklist_lst)
                summary = output["summary"]
                data = {
                    "user_input": self.SUMMARY_PROMPT.format(response=checklist_str),
                    "response": summary,
                    "reference": checklist_str,
                    "reference_contexts": checklist_lst,
                    "retrieved_contexts": checklist_lst
                }
                dataset.append(data)
            datasets[case_id] = dataset
        return datasets
